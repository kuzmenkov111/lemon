% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-pointline.r
\name{geom_pointpath}
\alias{geom_pointpath}
\title{Connected points}
\usage{
geom_pointpath(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, distance = unit(3, "pt"), lineend = "butt",
  linejoin = "round", linemitre = 1, linesize = 0.5, arrow = NULL, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2]{aes}}
or \code{\link[ggpot2]{aes_}}.}

\item{data}{The data to be displayed in this layer.}

\item{stat}{The statistical transformation to use on the data for this layer, 
as a string.}

\item{position}{Position adjustment, either as a string, or the result of a 
call to a position adjustment function
(e.g. \code{\link[ggplot2]{position_jitter}}).
Both lines and points gets the same adjustment 
(\emph{this} is where the function excels over \code{geom_point() + geom_line()}).}

\item{na.rm}{If \code{FALSE} (default), missing values are removed with a warning.
If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{Logical. Should this layer be included in the legends?
\code{NA} (default), includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetic, rather
than combining with them. This is most useful for helper functions that
define both data and aesthetics and shouldn't inherit behaviour from the 
default plot specification, e.g. \code{\link[ggplot2]{border}}.}

\item{distance}{Gap size between point and end of lines;
use \code{\link[grid]{unit}}. Is converted to 'pt' if given as simple numeric.}

\item{lineend}{Line end style (round, butt, square).}

\item{linejoin}{Line join style (round, mintre, bevel).}

\item{linemitre}{Line mitre limit (number greater than 1).}

\item{linesize}{Width of of line.}

\item{...}{other arguments passed on to \code{\link[ggplot2]{layer}}.}

\item{arraow}{Arrow specification, as created by \code{\link[grid]{arrow}}.}
}
\description{
\code{geom_pointpath} combined \code{\link[ggplot2]{geom_point}} and 
\code{\link[ggplot2]{geom_path}}, such that a) when jittering is used,
both lines and points stay connected, and b) provides a visual effect
by adding a small gap between the point and the end of line.
\code{geom_pointline} combines \code{\link[ggplot2]{geom_point}} and
\code{\link[ggplot2]{geom_line}}.
}
\details{
\code{geom_pointpath} connects the observations in the same order in which
they appear in the data.
\code{geom_pointline} connects them in order of the variable on the x-axis.
}
\section{Aesthetics}{

\code{geom_pointline} and \code{geom_pointpath} understands the following 
aesthetics (required aesthetics are in bold):
\itemize{
  \item \strong{x}
  \item \strong{y}
  \item alpha
  \item colour -- sets colour of point. Only affects line if \code{linecol=waiver()}. 
  \item stroke
  \item shape
  \item stroke
  \item group
  \item linetype
  \item size -- only affects point size. Width of line is set with 
        \code{linesize} and cannot be linked to an aesthetic.
}
}

